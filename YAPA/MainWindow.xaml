<shared:AbstractWindow
    x:Class="Motivational.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:yapa="clr-namespace:Motivational"
    xmlns:converters="clr-namespace:Motivational.Converters"
    xmlns:shared="clr-namespace:YAPA.Shared;assembly=YAPA.WPF.Shared"
    xmlns:converters1="clr-namespace:Motivational.Converters"
    Title="YAPA 2"
    Height="240"
    Width="360"
    ShowInTaskbar="True"
    Background="Transparent"
    ResizeMode="NoResize"
    AllowsTransparency="True"
    WindowStartupLocation="Manual"
    WindowStyle="None"
    Topmost="True"
    BorderThickness="30,2,30,30"
    >
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding ProgressState}" ProgressValue="{Binding ProgressValue}"/>
    </Window.TaskbarItemInfo>

    <Window.Resources>

        <!-- Localization -->
        <yapa:LocalizedStrings x:Key="LocalizedStrings"/>

        <!-- Global value converters -->
        <converters1:VisibilityConverter x:Key="VisibilityConverter" />

        <Style TargetType="TextBlock" x:Key="StyleTextTime">
            <Setter Property="FontFamily" Value="/Motivational;component/Fonts/#Roboto Condensed Light" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{Binding TimerForegroundColor}" />
            <Setter Property="Opacity" Value="{Binding TimerForegroundOpacity}" />
            <Setter Property="Cursor" Value="Arrow" />
            <Setter Property="FontStretch" Value="UltraCondensed" />
            <Setter Property="LineStackingStrategy" Value="MaxHeight" />
            <Setter Property="LineHeight" Value="24" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        ShadowDepth="0"
                        Direction="0"
                        Color="{Binding TimerShadowColor}"
                        Opacity="{Binding TimerShadowOpacity}"
                        BlurRadius="10"
                        />
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextPeriodNumber" BasedOn="{StaticResource StyleTextTime}">
            <Setter Property="FontFamily" Value="/Motivational;component/Fonts/#Roboto Condensed" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="LineHeight" Value="12" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextIconPeriod" BasedOn="{StaticResource StyleTextTime}">
            <Setter Property="FontFamily" Value="/Motivational;component/Fonts/#FontAwesome" />
            <Setter Property="FontSize" Value="10" />
            <Setter Property="Cursor" Value="Arrow" />
            <Setter Property="LineHeight" Value="10" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextTimeInside" BasedOn="{StaticResource StyleTextTime}">
            <Setter Property="Foreground" Value="{Binding WindowForegroundColor}" />
            <Setter Property="Effect" Value="{x:Null}" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextPeriodNumberInside" BasedOn="{StaticResource StyleTextPeriodNumber}">
            <Setter Property="Foreground" Value="{Binding WindowForegroundColor}" />
            <Setter Property="Effect" Value="{x:Null}" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextIconPeriodInside" BasedOn="{StaticResource StyleTextIconPeriod}">
            <Setter Property="Foreground" Value="{Binding WindowForegroundColor}" />
            <Setter Property="Effect" Value="{x:Null}" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextPeriodText" BasedOn="{StaticResource StyleTextTime}">
            <Setter Property="Foreground" Value="{Binding WindowForegroundColor}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="LineHeight" Value="22" />
            <Setter Property="Effect" Value="{x:Null}" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextPeriodSource" BasedOn="{StaticResource StyleTextPeriodText}">
            <Setter Property="FontFamily" Value="/Motivational;component/Fonts/#Roboto Condensed" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="{Binding WindowForegroundColor}" />
            <Setter Property="Opacity" Value="0.6" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="LineHeight" Value="20" />
            <Setter Property="Foreground" Value="{Binding AccentColor}" />
        </Style>

        <Style TargetType="TextBlock" x:Key="StyleTextIcon" BasedOn="{StaticResource StyleTextTime}">
            <Setter Property="FontFamily" Value="/Motivational;component/Fonts/#FontAwesome" />
            <Setter Property="FontSize" Value="24" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Effect" Value="{x:Null}" />
        </Style>

        <Style TargetType="Button" x:Key="StyleButtonIcon">
            <Setter Property="FontFamily" Value="/Motivational;component/Fonts/#FontAwesome" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Width" Value="16" />
            <Setter Property="Height" Value="16" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="Padding" Value="4,2,4,3" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid
                            IsHitTestVisible="True"
                            Background="Transparent"
                            >
                            <Grid
                                >

                                <Ellipse
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="{Binding AccentColor}"
                                    x:Name="LayoutContainer"
                                    RenderTransformOrigin="0.5,0.5"
                                    >
                                    <Ellipse.RenderTransform>
                                        <ScaleTransform ScaleX="0.5" ScaleY="0.5" />
                                    </Ellipse.RenderTransform>

                                </Ellipse>
                                <Viewbox
                                    x:Name="CaptionContainer"
                                    StretchDirection="Both"
                                    Margin="{TemplateBinding Padding}"
                                    Opacity="0"
                                    >
                                    <TextBlock
                                        x:Name="CaptionText"
                                        Text="{TemplateBinding Content}"
                                        Foreground="White"
                                        Style="{StaticResource StyleTextIcon}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch"
                                        TextAlignment="Center"
                                        />
                                </Viewbox>
                            </Grid>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="CaptionContainer"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0:0:0.15"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1"
                                                Duration="0:0:0.15"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1"
                                                Duration="0:0:0.15"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="CaptionContainer"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0:0:0.2"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                To="0.5"
                                                Duration="0:0:0.3"
                                                AutoReverse="False"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                To="0.5"
                                                Duration="0:0:0.3"
                                                AutoReverse="False"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="StyleButtonIconControl" BasedOn="{StaticResource StyleButtonIcon}">
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="48" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid
                            IsHitTestVisible="True"
                            Background="Transparent"
                            >
                            <Viewbox
                                StretchDirection="Both"
                                x:Name="LayoutContainer"
                                RenderTransformOrigin="0.5,0.5"
                                Margin="8"
                                >
                                <Viewbox.RenderTransform>
                                    <ScaleTransform ScaleX="0.75" ScaleY="0.75" />
                                </Viewbox.RenderTransform>

                                <TextBlock
                                    x:Name="CaptionText"
                                    Text="{TemplateBinding Content}"
                                    Foreground="{Binding WindowForegroundColor}"
                                    Style="{StaticResource StyleTextIcon}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch"
                                    TextAlignment="Center"
                                    />
<!--Opacity="{Binding ClockOpacity}"-->
                            </Viewbox>
                            
                            <Border
                                x:Name="MouseOverIndicator"
                                Background="{Binding AccentColor}"
                                Height="5"
                                VerticalAlignment="Bottom"
                                Opacity="0"
                                />
                        </Grid>

                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CaptionText" Property="Foreground" Value="{Binding AccentColor}" />
                                <Setter TargetName="CaptionText" Property="Opacity" Value="1" />
                                <Setter TargetName="CaptionText" Property="Effect" Value="{x:Null}" />
                            </Trigger>
                        </ControlTemplate.Triggers>-->

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="MouseOverIndicator"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0:0:0.15"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                To="1"
                                                Duration="0:0:0.15"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                To="1"
                                                Duration="0:0:0.15"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="MouseOverIndicator"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0"
                                                Duration="0:0:0.2"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                                                To="0.75"
                                                Duration="0:0:0.3"
                                                AutoReverse="False"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation
                                                Storyboard.TargetName="LayoutContainer"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                                                To="0.75"
                                                Duration="0:0:0.3"
                                                AutoReverse="False"
                                                >
                                                <DoubleAnimation.EasingFunction>
                                                    <QuinticEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Border" x:Key="StyleBorderBackground">
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="Background" Value="{Binding WindowBackgroundColor}" />
            <Setter Property="Cursor" Value="Arrow" />
        </Style>

        <Storyboard
            x:Key="PeriodCompletedIndicatorStoryboard"
            Timeline.DesiredFrameRate="10"
            Duration="0:0:0.5"
            RepeatBehavior="Forever"
            AutoReverse="True"
            >
            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="PeriodCompletedIndicatorEl"
                Storyboard.TargetProperty="Visibility"
                >
                <DiscreteObjectKeyFrame
                    KeyTime="0:0:0.2"
                    Value="{x:Static Visibility.Visible}"
                    />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames
                Storyboard.TargetName="PeriodCompletedIndicatorInsideWindowEl"
                Storyboard.TargetProperty="Visibility"
                >
                <DiscreteObjectKeyFrame
                    KeyTime="0:0:0.2"
                    Value="{x:Static Visibility.Visible}"
                    />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <Window.Triggers>
        <!-- Window mouse over animations -->
        <EventTrigger RoutedEvent="Window.MouseEnter">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetName="WindowContentPanel"
                            Storyboard.TargetProperty="Opacity"
                            To="1"
                            Duration="0:0:0.15"
                            />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
        <EventTrigger RoutedEvent="Window.MouseLeave">
            <EventTrigger.Actions>
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                            Storyboard.TargetName="WindowContentPanel"
                            Storyboard.TargetProperty="Opacity"
                            To="0"
                            Duration="0:0:0.3"
                            />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger.Actions>
        </EventTrigger>
    </Window.Triggers>

    <Grid>
        <StackPanel
            x:Name="ClockOutsideWindow"
            Orientation="Horizontal"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="3,2"
            >

            <!-- Current time -->
            <Grid
                Background="Transparent"
                IsHitTestVisible="True"
                >

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="30" />
                </Grid.ColumnDefinitions>

                <TextBlock
                    x:Name="CurrentTimeMinutes"
                    Grid.Column="0"
                    Style="{StaticResource StyleTextTime}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="00"
                    />
                <TextBlock
                    x:Name="CurrentTimeSeparator"
                    Grid.Column="1"
                    Style="{StaticResource StyleTextTime}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text=":"
                    />
                <TextBlock
                    x:Name="CurrentTimeSeconds"
                    Grid.Column="2"
                    Style="{StaticResource StyleTextTime}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="00"
                    />

                <!--<Border
                    x:Name="PeriodCompletedIndicatorEl"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Height="4"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Stretch"
                    Background="{Binding AccentColor}"
                    Visibility="Collapsed"
                    />-->
            </Grid>

            <StackPanel
                Height="12"
                ToolTip="Current period"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,0,6"
                >

                <!-- Session icon -->
                <TextBlock
                    x:Name="SessionIcon"
                    Style="{StaticResource StyleTextIconPeriod}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    TextAlignment="Right"
                    Text="{Binding CurrentPeriodIcon}"
                    Margin="0,0,0,0"
                    />

                <!-- Session counter -->
                <TextBlock
                    x:Name="SessionCounter"
                    Style="{StaticResource StyleTextPeriodNumber}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    TextAlignment="Right"
                    Text="{Binding CurrentPomodoroPeriod}"
                    Visibility="{Binding CurrentPomodoroPeriod, Converter={StaticResource VisibilityConverter}}"
                    Margin="4,0,0,0"
                    />
            </StackPanel>

            <Ellipse
                x:Name="PeriodCompletedIndicatorEl"
                Height="10"
                Width="10"
                VerticalAlignment="Bottom"
                Fill="{Binding AccentColor}"
                Visibility="Hidden"
                Margin="5,0,0,6"
                />
        </StackPanel>

        <Grid
            x:Name="WindowContentPanel"
            Opacity="1"
            Margin="0"
            >
            
            <Grid.Effect>
                <DropShadowEffect
                    ShadowDepth="10"
                    Direction="270"
                    Color="{Binding WindowShadowColor}"
                    Opacity="{Binding WindowShadowOpacity}"
                    BlurRadius="30"
                    />
            </Grid.Effect>
            
            <Border
                x:Name="BackgroundBorder"
                Grid.RowSpan="3"
                Background="{Binding WindowBackgroundColor}"
                CornerRadius="4"
                />

            <!-- System buttons -->
            <StackPanel
                x:Name="ButtonsPanel"
                Orientation="Horizontal"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Margin="10"
                >

                <!-- Settings button -->
                <Button
                    x:Name="ButtonSettings"
                    Content=""
                    ToolTip="{Binding Source={StaticResource LocalizedStrings}, Path=GeneralResources.app_button_settings}"
                    Click="Settings_OnClick"
                    Style="{StaticResource StyleButtonIcon}"
                    />

                <!--
                    Minimize button
                    PADDING here is compensating the FontAwesome's typography - thanks to it the icon
                    is vertically centered to an ellipse
                -->
                <Button
                    x:Name="ButtonMinimize"
                    Content=""
                    ToolTip="{Binding Source={StaticResource LocalizedStrings}, Path=GeneralResources.app_button_window_minimize}"
                    Click="Minimize_OnClick"
                    Style="{StaticResource StyleButtonIcon}"
                    Padding="4,3,4,3"
                    />

                <!-- Close button -->
                <Button
                    x:Name="ButtonExit"
                    Content=""
                    ToolTip="{Binding Source={StaticResource LocalizedStrings}, Path=GeneralResources.app_button_window_close}"
                    Click="Exit_OnClick"
                    Style="{StaticResource StyleButtonIcon}"
                    />

            </StackPanel>

            <!-- Session description -->
            <StackPanel
                Margin="32,40,32,48"
                VerticalAlignment="Center"
                >

                <TextBlock
                    Style="{StaticResource StyleTextPeriodText}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    TextAlignment="Center"
                    Text="{Binding CurrentPeriodText, FallbackValue=Keep focused!}"
                    TextWrapping="Wrap"
                    />

                <TextBlock
                    Style="{StaticResource StyleTextPeriodSource}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    TextAlignment="Center"
                    Text="{Binding CurrentPeriodTextSource}"
                    TextWrapping="Wrap"
                    Visibility="{Binding CurrentPeriodTextSource, Converter={StaticResource VisibilityConverter}}"
                    />
            </StackPanel>

            <Border
                x:Name="ControlsPanel"
                Grid.Row="2"
                Background="{Binding WindowBackground2Color}"
                VerticalAlignment="Bottom"
                CornerRadius="0,0,4,4"
                >

                <!-- Controls buttons -->
                <StackPanel
                    Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Margin="32,-2,32,0"
                    >

                    <!-- Stop button -->
                    <Button
                        x:Name="ButtonStop"
                        Content=""
                        ToolTip="{Binding Source={StaticResource LocalizedStrings}, Path=GeneralResources.app_button_stop_title}"
                        Click="ButtonStop_Click"
                        Style="{StaticResource StyleButtonIconControl}"
                        Visibility="{Binding CanStop, Converter={StaticResource VisibilityConverter}}"
                        />

                    <!-- Play button -->
                    <Button
                        x:Name="ButtonStart"
                        Content=""
                        ToolTip="{Binding Source={StaticResource LocalizedStrings}, Path=GeneralResources.app_button_start_title}"
                        Click="ButtonStart_Click"
                        Style="{StaticResource StyleButtonIconControl}"
                        Visibility="{Binding CanStart, Converter={StaticResource VisibilityConverter}}"
                        />

                    <!-- Pause button -->
                    <Button
                        x:Name="ButtonPause"
                        Content=""
                        ToolTip="{Binding Source={StaticResource LocalizedStrings}, Path=GeneralResources.app_button_pause_title}"
                        Click="ButtonPause_Click"
                        Style="{StaticResource StyleButtonIconControl}"
                        Visibility="{Binding CanPause, Converter={StaticResource VisibilityConverter}}"
                        />
                </StackPanel>
            </Border>

            <StackPanel
                x:Name="ClockInsideWindow"
                Orientation="Horizontal"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="3,2"
                >

                <!-- Current time -->
                <Grid
                    Background="Transparent"
                    IsHitTestVisible="True"
                    >

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        x:Name="CurrentTimeMinutesInsideWindow"
                        Grid.Column="0"
                        Style="{StaticResource StyleTextTimeInside}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="00"
                        />
                    <TextBlock
                        Grid.Column="1"
                        Style="{StaticResource StyleTextTimeInside}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text=":"
                        />
                    <TextBlock
                        x:Name="CurrentTimeSecondsInsideWindow"
                        Grid.Column="2"
                        Style="{StaticResource StyleTextTimeInside}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Text="00"
                        />

                    <!--<Border
                        x:Name="PeriodCompletedIndicatorInsideWindowEl"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Height="4"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Stretch"
                        Background="{Binding AccentColor}"
                        Visibility="Collapsed"
                        />-->
                </Grid>

                <StackPanel
                    Height="12"
                    ToolTip="Current period"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Margin="0,0,0,6"
                    >

                    <!-- Session icon -->
                    <TextBlock
                        x:Name="SessionIconInside"
                        Style="{StaticResource StyleTextIconPeriodInside}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        Text="{Binding CurrentPeriodIcon}"
                        Margin="0,0,0,0"
                        />

                    <!-- Session counter -->
                    <TextBlock
                        x:Name="SessionCounterInside"
                        Style="{StaticResource StyleTextPeriodNumberInside}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"
                        TextAlignment="Right"
                        Text="{Binding CurrentPomodoroPeriod}"
                        Visibility="{Binding CurrentPomodoroPeriod, Converter={StaticResource VisibilityConverter}}"
                        Margin="4,0,0,0"
                        />
                </StackPanel>

                <Ellipse
                    x:Name="PeriodCompletedIndicatorInsideWindowEl"
                    Height="10"
                    Width="10"
                    VerticalAlignment="Bottom"
                    Fill="{Binding AccentColor}"
                    Visibility="Hidden"
                    Margin="5,0,0,7"
                    />
            </StackPanel>
        </Grid>
    </Grid>
</shared:AbstractWindow>







